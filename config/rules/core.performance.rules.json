[
    {
        "pattern": "<cflock[\\w\\W]+<cflock[\\w\\W]+</cflock",
        "message": "Avoid nesting cflock as it can lead to long-running code and can cause deadlocks.",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't nest cflock tags",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "3",
        "customcode": "",
        "bulkcheck": true,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "parameterExists\\(",
        "message": "Prefer StructKeyExists() over ParameterExists()",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use ParameterExists",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "3",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "isDefined\\(",
        "message": "Prefer StructKeyExists() over IsDefined()",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use IsDefined",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "3",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "Evaluate(?=\\()",
        "message": "Avoid Evaluate().",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use Evaluate method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "[^\\w]DE(?=\\()",
        "message": "Avoid DE().",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use DE method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "iif(?=\\()",
        "message": "Always use cfif/cfelse instead of iif(). It is significantly faster and more readable.",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use iif method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "StructFind(?=\\()",
        "message": "Always use struct.key or struct[key] instead of structFind(struct, key). They are significantly faster and more readable.",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use StructFind method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "DecrementValue(?=\\()",
        "message": "Always use x = x - 1 or x-- instead of x = decrementValue(x). It is more readable and slightly faster.",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use DecrementValue method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "IncrementValue(?=\\()",
        "message": "Always use x = x + 1 or x++ instead of x = incrementValue(x). It is more readable and slightly faster.",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use IncrementValue method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "5",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "is\\s+\\042\\042|eq\\s+\\042\\042|is\\s+not\\s+\\042\\042|neq\\s+\\042\\042|is\\s+\\047\\047|eq\\s+\\047\\047|is\\s+not\\s+\\047\\047|neq\\s+\\047\\047",
        "message": "Always use len() instead of is \", eq \", is not \", neq \"",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Use Len method",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "3",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    },
    {
        "pattern": "setVariable\\(",
        "message": "Prefer set tag/script over SetVariable()",
        "componentname": "CodeChecker",
        "category": "Performance",
        "name": "Don't use SetVariable",
        "passonmatch": false,
        "extensions": "cfm,cfc",
        "severity": "3",
        "customcode": "",
        "bulkcheck": false,
        "tagname": "",
        "functionname": "checkCode"
    }
]